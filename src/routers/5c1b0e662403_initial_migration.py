"""Initial migration

Revision ID: 5c1b0e662403
Revises: 
Create Date: 2024-08-23 21:28:10.817607

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '5c1b0e662403'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('employment_id', table_name='employee_onboarding')
    op.drop_table('employee_onboarding')
    op.drop_table('employee_role')
    op.drop_table('roles')
    # ### end Alembic commands ###
    op.drop_constraint('employee_role_ibfk_2', 'employee_role', type_='foreignkey')

    # Drop tables
    op.drop_table('roles')
    op.drop_table('employee_role')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('employee_role',
    sa.Column('employee_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_onboarding.id'], name='employee_role_ibfk_1'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='employee_role_ibfk_2'),
    sa.PrimaryKeyConstraint('employee_id', 'role_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('employee_onboarding',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employment_id', mysql.VARCHAR(length=100), nullable=True),
    sa.Column('firstname', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('lastname', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('dateofbirth', sa.DATE(), nullable=False),
    sa.Column('contactnumber', mysql.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('emailaddress', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('address', mysql.TEXT(), nullable=False),
    sa.Column('nationality', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('gender', mysql.VARCHAR(length=10), nullable=True),
    sa.Column('maritalstatus', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('employment_id', 'employee_onboarding', ['employment_id'], unique=True)
    op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'employee_role',
        sa.Column('employee_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['employee_id'], ['employee_onboarding.id']),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id']),
        sa.PrimaryKeyConstraint('employee_id', 'role_id')
    )

    # Recreate other tables if necessary
    op.create_table(
        'employee_employment_details',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('employee_email', sa.String(length=100), unique=True),
        sa.Column('password', sa.String(length=100), unique=True),
        sa.Column('job_position', sa.String(length=100), nullable=False),
        sa.Column('department', sa.String(length=100), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('employment_type', sa.String(length=50), nullable=False),
        sa.Column('reporting_manager', sa.Integer()),
        sa.Column('work_location', sa.String(length=100)),
        sa.Column('basic_salary', sa.DECIMAL(10, 2)),
        sa.Column('releave_date', sa.Date(), default=None),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('created_at', sa.DateTime(), default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), default=sa.func.now(), onupdate=sa.func.now()),
        sa.ForeignKeyConstraint(['employee_id'], ['employee_onboarding.employment_id']),
        sa.PrimaryKeyConstraint('id')
    )

    # Ensure to re-add any indexes if necessary
    # op.create_index('idx_employee_email', 'employee_employment_details', ['employee_email'])
    # op.create_index('idx_password', 'employee_employment_details', ['password'])
    # ### end Alembic commands ###
